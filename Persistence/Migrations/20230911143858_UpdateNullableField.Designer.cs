// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911143858_UpdateNullableField")]
    partial class UpdateNullableField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("class_name");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("grade");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassName = "6A",
                            Grade = 6
                        },
                        new
                        {
                            Id = 2,
                            ClassName = "6B",
                            Grade = 6
                        },
                        new
                        {
                            Id = 3,
                            ClassName = "6C",
                            Grade = 6
                        },
                        new
                        {
                            Id = 4,
                            ClassName = "6D",
                            Grade = 6
                        },
                        new
                        {
                            Id = 5,
                            ClassName = "7A",
                            Grade = 7
                        },
                        new
                        {
                            Id = 6,
                            ClassName = "7B",
                            Grade = 7
                        },
                        new
                        {
                            Id = 7,
                            ClassName = "7C",
                            Grade = 7
                        },
                        new
                        {
                            Id = 8,
                            ClassName = "7D",
                            Grade = 7
                        },
                        new
                        {
                            Id = 9,
                            ClassName = "8A",
                            Grade = 8
                        },
                        new
                        {
                            Id = 10,
                            ClassName = "8B",
                            Grade = 8
                        },
                        new
                        {
                            Id = 11,
                            ClassName = "8C",
                            Grade = 8
                        },
                        new
                        {
                            Id = 12,
                            ClassName = "8D",
                            Grade = 8
                        },
                        new
                        {
                            Id = 13,
                            ClassName = "9A",
                            Grade = 9
                        },
                        new
                        {
                            Id = 14,
                            ClassName = "9B",
                            Grade = 9
                        },
                        new
                        {
                            Id = 15,
                            ClassName = "9C",
                            Grade = 9
                        },
                        new
                        {
                            Id = 16,
                            ClassName = "9D",
                            Grade = 9
                        });
                });

            modelBuilder.Entity("Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("birthday");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("country");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("middle_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hoa Lac, Thach That, Ha Noi",
                            Birthday = new DateTime(2001, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 1,
                            Country = "Vietnam",
                            FirstName = "Hoang",
                            LastName = "Le",
                            MiddleName = "Huy",
                            PhoneNumber = "0369473014"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nguyen Trai, Thanh Xuan, Ha Noi",
                            Birthday = new DateTime(1999, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 1,
                            Country = "Vietnam",
                            FirstName = "Sang",
                            LastName = "Nguyen",
                            MiddleName = "Huu",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Truong Chinh, Thanh Xuan, Ha Noi",
                            Birthday = new DateTime(2001, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 1,
                            Country = "Vietnam",
                            FirstName = "Quan",
                            LastName = "Nguyen",
                            MiddleName = "Tran",
                            PhoneNumber = "0975328374"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Linh Nam, Hoang Mai, Ha Noi",
                            Birthday = new DateTime(1999, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 2,
                            Country = "Vietnam",
                            FirstName = "Vinh",
                            LastName = "Pham",
                            MiddleName = "Xuan",
                            PhoneNumber = "0982376178"
                        },
                        new
                        {
                            Id = 5,
                            Address = "New York",
                            Birthday = new DateTime(1997, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 2,
                            Country = "United State",
                            FirstName = "Thi",
                            LastName = "Pham",
                            MiddleName = "Viet",
                            PhoneNumber = "0013829372"
                        },
                        new
                        {
                            Id = 6,
                            Address = "California",
                            Birthday = new DateTime(1996, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 2,
                            Country = "United State",
                            FirstName = "Hang",
                            LastName = "Le",
                            MiddleName = "Thi Thuy",
                            PhoneNumber = "001984728487"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Texas",
                            Birthday = new DateTime(1995, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 2,
                            Country = "United State",
                            FirstName = "Hong",
                            LastName = "Nguyen",
                            MiddleName = "Thi",
                            PhoneNumber = "001839265221"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Paris",
                            Birthday = new DateTime(1990, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 5,
                            Country = "France",
                            FirstName = "Thien",
                            LastName = "Vu",
                            MiddleName = "Van",
                            PhoneNumber = "00339283921793"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Lyon",
                            Birthday = new DateTime(1992, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 5,
                            Country = "France",
                            FirstName = "Hoc",
                            LastName = "Pham",
                            MiddleName = "Van",
                            PhoneNumber = "00338292729282"
                        },
                        new
                        {
                            Id = 10,
                            Address = "HongKong",
                            Birthday = new DateTime(2000, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 9,
                            Country = "China",
                            FirstName = "Nam",
                            LastName = "Vu",
                            MiddleName = "Hoai",
                            PhoneNumber = "011852892023928"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Macau",
                            Birthday = new DateTime(2001, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 10,
                            Country = "China",
                            FirstName = "Ly",
                            LastName = "Dong",
                            MiddleName = "Khanh",
                            PhoneNumber = "00868093209"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Beijing",
                            Birthday = new DateTime(1998, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 14,
                            Country = "China",
                            FirstName = "Thao",
                            LastName = "Nguyen",
                            MiddleName = "Phuong",
                            PhoneNumber = "00869382029"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Bangkok",
                            Birthday = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClassId = 16,
                            Country = "Thailand",
                            FirstName = "Dao",
                            LastName = "Vu",
                            MiddleName = "Thi",
                            PhoneNumber = "006698230923"
                        });
                });

            modelBuilder.Entity("Domain.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<float?>("Mark")
                        .HasColumnType("real");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 1,
                            Mark = 9.5f
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 3,
                            Mark = 8.25f
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4,
                            Mark = 8.5f
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            Mark = 9.5f
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2,
                            Mark = 7.5f
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 3,
                            Mark = 9f
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 4,
                            Mark = 7.5f
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 5,
                            Mark = 6.75f
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 6,
                            Mark = 5.25f
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 7,
                            Mark = 5.75f
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 8,
                            Mark = 7f
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 9,
                            Mark = 8.75f
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 10,
                            Mark = 9.5f
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 1,
                            Mark = 10f
                        },
                        new
                        {
                            StudentId = 9,
                            SubjectId = 2,
                            Mark = 7.5f
                        },
                        new
                        {
                            StudentId = 10,
                            SubjectId = 3,
                            Mark = 8.5f
                        },
                        new
                        {
                            StudentId = 11,
                            SubjectId = 1,
                            Mark = 6f
                        },
                        new
                        {
                            StudentId = 12,
                            SubjectId = 5,
                            Mark = 7.25f
                        },
                        new
                        {
                            StudentId = 13,
                            SubjectId = 6,
                            Mark = 8f
                        });
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("subject_code");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("subject_name");

                    b.HasKey("Id");

                    b.HasIndex("SubjectCode")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubjectCode = "M001",
                            SubjectName = "Math"
                        },
                        new
                        {
                            Id = 2,
                            SubjectCode = "L001",
                            SubjectName = "Literature"
                        },
                        new
                        {
                            Id = 3,
                            SubjectCode = "E001",
                            SubjectName = "English"
                        },
                        new
                        {
                            Id = 4,
                            SubjectCode = "P001",
                            SubjectName = "Physics"
                        },
                        new
                        {
                            Id = 5,
                            SubjectCode = "C001",
                            SubjectName = "Chemistry"
                        },
                        new
                        {
                            Id = 6,
                            SubjectCode = "B001",
                            SubjectName = "Biology"
                        },
                        new
                        {
                            Id = 7,
                            SubjectCode = "H001",
                            SubjectName = "History"
                        },
                        new
                        {
                            Id = 8,
                            SubjectCode = "G001",
                            SubjectName = "Geography"
                        },
                        new
                        {
                            Id = 9,
                            SubjectCode = "CE001",
                            SubjectName = "Civic Education"
                        },
                        new
                        {
                            Id = 10,
                            SubjectCode = "PE001",
                            SubjectName = "Physical Education"
                        });
                });

            modelBuilder.Entity("Domain.Models.Student", b =>
                {
                    b.HasOne("Domain.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Domain.Models.StudentSubject", b =>
                {
                    b.HasOne("Domain.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Domain.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
